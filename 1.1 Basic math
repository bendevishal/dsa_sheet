1. Reverse Number
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:
Input: x = 123
Output: 321

Example 2:
Input: x = -123
Output: -321

Example 3:
Input: x = 120
Output: 21
 
Constraints:
-231 <= x <= 231 - 1

Solution:  
class Solution {
    public int reverse(int x) {
        if(x==0)
        return 0;
        if(x==1)
        return 1;
        long actual=Math.abs(x);
        long reversed=0;
        while(actual>0){
            long lastdigit=actual%10;
        
            reversed=reversed*10+lastdigit;
            actual/=10;
        }if(reversed>Integer.MAX_VALUE || reversed<-Ingteger.MIN_VALUE)
        return 0;
        else{
            
        if(x<0)
        return (int)-reversed;
        else
        return (int)reversed;
        }
    
    }
}

2. Palindrome Number
Given an integer x, return true if x is a 
palindrome , and false otherwise.

 

Example 1:
Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.

Example 2:
Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.

Example 3:
Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:
-231 <= x <= 231 - 1

Solution:
class Solution {
    public boolean isPalindrome(int x) {
        if(x==0)
        return true;
        long actual=Math.abs(x);
        long reversed=0;
        while(actual>0){
            long lastdigit=actual%10;
        
            reversed=reversed*10+lastdigit;
            actual/=10;
        }
        if(reversed>Integer.MAX_VALUE || reversed<Integer.MIN_VALUE)
        return false;
        else{
            
        if(x<0)
        return false;
        else if(x==(int)reversed)
        return true;
        else
        return false;
        }
        
    }
}
